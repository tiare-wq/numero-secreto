""" 'NÃºmero secreto' es un juego que consiste en ingresar dos nÃºmeros, un menor y uno mayor, que serÃ¡n el rango del nÃºmero secreto,
un nÃºmero random. Se considera que es una parte del rompecabezas de un juego de aventura mÃ¡s grande. El Nigromante no mata al jugador,
solo no le da el tesoro.

AÃºn no domino bien JSON y txt por lo tanto no decidÃ­ no implementarlo. """

from funciones_NS import actualizar_resultados, minijuego, mostrar_todos_los_resultados, nueva_partida, validar_continuar, validar_nombre
import random
import time

# FunciÃ³n principal
def main():
    jugadores = {}

    while True:
        print("ğŸ”® NUEVA PARTIDA\n")
        nombre = validar_nombre()
        nueva_partida(nombre, jugadores)

        # Solicita dos nÃºmeros, con un rango mÃ­nimo de 15. Se utiliza try/except para garantizar que sean nÃºmeros enteros
        while True:
            try:
                num1 = int(input("Ingrese el primer nÃºmero (piÃ©nsalo bien...): "))
                break
            except ValueError:
                print("Â¿Y eso que es? Â¿Se come? No, solo se aceptan nÃºmeros.\n")
        while True:
            try:
                num2 = int(input("Ingrese el segundo nÃºmero (debe ser MAYOR que el primero): "))

                if num2 - num1 >= 15: # Comprueba el rango
                    break
                print("Â¡Al menos 15 nÃºmeros mÃ¡s grande! O sino el mago no aceptarÃ¡...\n")
            except ValueError:
                print("Â¿Y eso que es? Â¿Se come? No, solo se aceptan nÃºmeros.\n")

        num_secreto = random.randint(num1, num2) # Genera el nÃºmero secreto

        print("Oh! Â¡Entraste a mi juego! Â¡Para obtener mi tesoro debes adivinar el nÃºmero secreto! Â¡Pero nadie me lo quitarÃ¡! Â¡JAJAJA!\n")
        time.sleep(2)
        print("ğŸ“¢ Â¡Recuerda que el nÃºmero secreto estÃ¡ entre el rango que diste!\n")

        resultado = minijuego(num1, num2, num_secreto)

        if resultado:
            time.sleep(1)
            print(f"Felicitaciones {nombre}, has ganado el reto.\n")

            actualizar_resultados(nombre, jugadores)
        
        respuesta = validar_continuar()
        
        if respuesta == 'n':
            mostrar_todos_los_resultados(jugadores)
            break

main()